
import java.awt.Color;
import java.util.List;

import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.border.Border;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sankhe
 */
public class ClassSummary extends javax.swing.JPanel {
	StudentModel model;
	/**
	 * Creates new form ClassSummary
	 */
	public ClassSummary() {
		initComponents();
		Color c = new Color(243, 247, 110);
		setBackground(c);
		Border compound, raisedbevel, loweredbevel;
		raisedbevel = BorderFactory.createRaisedBevelBorder();
		loweredbevel = BorderFactory.createLoweredBevelBorder();
		Border redline = BorderFactory.createLineBorder(Color.red, 5);
		//This creates a nice frame.
		compound = BorderFactory.createCompoundBorder(raisedbevel, loweredbevel);
		setBorder(compound);
		//Add a red outline to the frame.
		compound = BorderFactory.createCompoundBorder(
				redline, compound);
		setBorder(compound);
		model = MainFrame.getStudentModel();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		getMaxScoreButton = new javax.swing.JButton();
		getMinScoreButton = new javax.swing.JButton();
		viewClassSummaryButton = new javax.swing.JButton();
		getIndividualScoreButton = new javax.swing.JButton();
		backButton = new javax.swing.JButton();

		setLayout(new java.awt.GridBagLayout());

		getMaxScoreButton.setBackground(new java.awt.Color(153, 0, 153));
		getMaxScoreButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		getMaxScoreButton.setText("Get Max Score");
		getMaxScoreButton.setToolTipText("click me to get highest score in the class");
		getMaxScoreButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				getMaxScoreButtonActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.ipadx = 29;
		gridBagConstraints.ipady = 40;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(67, 55, 0, 0);
		add(getMaxScoreButton, gridBagConstraints);

		getMinScoreButton.setBackground(new java.awt.Color(153, 0, 153));
		getMinScoreButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		getMinScoreButton.setText("Get Min Score");
		getMinScoreButton.setToolTipText("click me to get lowest score in the class");
		getMinScoreButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				getMinScoreButtonActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.ipadx = 33;
		gridBagConstraints.ipady = 40;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(67, 27, 0, 0);
		add(getMinScoreButton, gridBagConstraints);

		viewClassSummaryButton.setBackground(new java.awt.Color(153, 0, 153));
		viewClassSummaryButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		viewClassSummaryButton.setText("Class Summary");
		viewClassSummaryButton.setToolTipText("click me to view class summaey");
		viewClassSummaryButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				viewClassSummaryButtonActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.ipadx = 29;
		gridBagConstraints.ipady = 40;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(36, 55, 0, 0);
		add(viewClassSummaryButton, gridBagConstraints);

		getIndividualScoreButton.setBackground(new java.awt.Color(153, 0, 153));
		getIndividualScoreButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		getIndividualScoreButton.setText("Get individual score");
		getIndividualScoreButton.setToolTipText("click me to get individual score of a student");
		getIndividualScoreButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				getIndividualScoreButtonActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.ipadx = 1;
		gridBagConstraints.ipady = 40;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(36, 27, 0, 0);
		add(getIndividualScoreButton, gridBagConstraints);

		backButton.setBackground(new java.awt.Color(255, 51, 102));
		backButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		backButton.setText("Back");
		backButton.setToolTipText("click me to go back");
		backButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				backButtonActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.ipadx = 36;
		gridBagConstraints.ipady = 8;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
		gridBagConstraints.insets = new java.awt.Insets(37, 121, 25, 29);
		add(backButton, gridBagConstraints);
	}// </editor-fold>                        

	private void viewClassSummaryButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                       
		// TODO add your handling code here:
		//Student s1 = model.getMinScore();
		List<Student> st =  model.getMinScore();
		Student s1 = st.get(0);
		Double s2 = model.getAvgScore();
		List<Student> st_1 =  model.getMaxScore();
		Student s3 = st_1.get(0);
		//Student s3 = model.getMaxScore();
		int s4 = model.studentAboveAvg();
		int s5 = model.studentBelowAvg();
		String str = "Class Summary\n\n";
		if(s1 != null) {
			str = str + "Minimum Score : "+s1.getAvg_score();
		}
		if(s2 != null) {
			str = str + "\nAverage Score  : "+s2;
		}
		if(s3 != null) {
			str = str + "\nMaximum Score : "+s3.getAvg_score();
		}
		str = str + "\nNumber of student above average : "+ s4;
		str = str + "\nNumber of student below average : "+ s5;

		JOptionPane.showMessageDialog(this, new JTextArea(str));
	} 

	private void  getIndividualScoreButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                       
		// TODO add your handling code here:
		takeUserInput();
		Student s1 = model.loginPlayer(fname.getText(), lname.getText());
		String str =  s1.getFirst_name() + " " + s1.getLast_name() + " has score " + s1.getTotalScore()
				+ " for " + s1.getNumber_of_times_game_played() + " games played." +"\n\n" +
				"Average score is " + s1.getAvg_score() + " .";
		Double s2 = model.getAvgScore();
		if(s1.getAvg_score() >= s2) {
			str = str + "\nThe student is above avergae.";
		} else {
			str = str + "\nThe student is below avergae.";
		}
		str = str + "\n\n class average is " + s2 + " .";
		JOptionPane.showMessageDialog(this, new JTextArea(str));
	} 

	public void takeUserInput() {
		fname= new JTextField(10);
		lname = new JTextField(10);

		JPanel myPanel = new JPanel();
		myPanel.add(new JLabel("First Name: "));
		myPanel.add(fname);
		myPanel.add(Box.createHorizontalStrut(20)); // a spacer
		myPanel.add(new JLabel("Last Name: "));
		myPanel.add(lname);

		int result = JOptionPane.showConfirmDialog(null, myPanel, 
				"Please Enter First name and Last name", JOptionPane.OK_CANCEL_OPTION);
	}

	private void getMinScoreButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                       
		// TODO add your handling code here:
		List<Student> st = model.getMinScore();
		String str = "";
		for(Student s1 : st ) {

			if(s1 != null) {
				str = str + "\nIn the class " + s1.getFirst_name() + " " + s1.getLast_name() + " has Min Score " + s1.getAvg_score()+
						".\nTotal number of games played are "+ s1.getNumber_of_times_game_played() + " and\n"+
						" has total score " + s1.getTotalScore() + " .\n";
				//JOptionPane.showMessageDialog(this, str, "Message Dialog", JOptionPane.PLAIN_MESSAGE);

			} else {
				JOptionPane.showMessageDialog(this, "Min Score is 0 or there no entry in database" , "Message Dialog",
						JOptionPane.PLAIN_MESSAGE);
			}
		}
		if(st.size() > 0)
			JOptionPane.showMessageDialog(this, new JTextArea(str));
	} 

	private void getMaxScoreButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                       
		// TODO add your handling code here:
		//Student s1 = model.getMaxScore();
		List<Student> st = model.getMaxScore();
		String str = "";
		for(Student s1 : st ) {
			if(s1 != null) {
				str = str +  "\nIn the class " + s1.getFirst_name() + " " + s1.getLast_name() + " has Max Score " + s1.getAvg_score()+
						".\nTotal number of games played are "+ s1.getNumber_of_times_game_played() + " and\n"+
						" has total score " + s1.getTotalScore() +" .\n";
				//JOptionPane.showMessageDialog(this, str, "Message Dialog", JOptionPane.PLAIN_MESSAGE);

			} else {
				JOptionPane.showMessageDialog(this, "Min Score is 0 or there no entry in database" , "Message Dialog",
						JOptionPane.PLAIN_MESSAGE);
			}
		}
		JOptionPane.showMessageDialog(this, new JTextArea(str));
	} 

	private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
		// TODO add your handling code here:
		MainFrame.layCard.show(MainFrame.getTopPanel(), "2");
	}                                          



	// Variables declaration - do not modify 
	private JTextField fname;
	private JTextField lname;
	private javax.swing.JButton backButton;
	private javax.swing.JButton getIndividualScoreButton;
	private javax.swing.JButton getMaxScoreButton;
	private javax.swing.JButton getMinScoreButton;
	private javax.swing.JButton viewClassSummaryButton;
	// End of variables declaration                   
}
